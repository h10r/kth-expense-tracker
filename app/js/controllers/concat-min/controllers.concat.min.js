expenseTrackerAppModule.controller("expenseTracker.categoriesController",function($scope,$location,categoriesModel,userModel,navigationService){"use strict";$scope.currentUser=userModel.getCurrentUser(),$scope.categoryColors=categoriesModel.getAvailableColors(),$scope.selectedColor=-1,$scope.goBack=navigationService.goBack,"/settings/categories/add"===$location.$$path?($scope.currentCategory=categoriesModel.initNewCategory(),$scope.availableColors=categoriesModel.getAvailableColors()):$scope.categories=categoriesModel.listCategories(),$scope.chooseColorForCategory=function(colorId){$scope.selectedColor===colorId&&(colorId=-1),$scope.selectedColor=colorId,categoriesModel.setCategoryColorById(colorId)},$scope.saveCategory=function(){categoriesModel.saveCurrentCategoryToCollection(),$scope.goBack()},$scope.removeCategory=function(){var anchorHref,currentModal,categoryId,clickedAnchor=document.getElementsByClassName("triggered-active-modal");clickedAnchor=clickedAnchor[0],categoryId=clickedAnchor.dataset.categoryid,categoriesModel.removeCategoryFromCollection(categoryId),anchorHref=clickedAnchor.getAttribute("href"),currentModal=document.querySelector(anchorHref),currentModal.classList.toggle("active")}}),expenseTrackerAppModule.controller("expenseTracker.expensesController",function($scope,$location,$routeParams,$rootScope,userModel,expensesModel,categoriesModel,currenciesModel,knobModel){"use strict";var currentCategoryId,now;$scope.categories=categoriesModel.listCategories(),$scope.categoryColors=categoriesModel.getAvailableColors(),"/expenses/add"===$location.$$path?($scope.currentExpense=expensesModel.initNewExpense(),now=new Date,$scope.currentExpense.date=now.toDateString(),$scope.currentExpense.time=now.toLocaleTimeString(),$scope.amount=expensesModel.getAmount(),knobModel.initialize($("div.ival"))):-1!==$location.$$path.indexOf("/expenses/remove/")?(expensesModel.removeExpenseFromCollection($routeParams.id),$location.path("/feed")):$scope.currentExpense=expensesModel.getCurrentExpense(),$scope.amount=expensesModel.getAmount(),currentCategoryId=expensesModel.getCategory(),$scope.selectedCategory=categoriesModel.getCategoryById(currentCategoryId),$scope.userCurrency=currenciesModel.getCurrencyById(userModel.getCurrency()),$scope.chooseCategory=function(categoryId){void 0===categoryId&&(categoryId=5),expensesModel.setCategory(categoryId),$location.path("/expenses/add/details")},$scope.saveExpense=function(){expensesModel.addExpenseToCollection(),$location.path("/feed")}}),expenseTrackerAppModule.controller("expenseTracker.feedController",function($scope,$location,$routeParams,userModel,expensesModel,categoriesModel,currenciesModel){"use strict";if($scope.categoryColors=categoriesModel.getAvailableColors(),$scope.userCurrency=currenciesModel.getCurrencyById(userModel.getCurrency()),$scope.userBudget=userModel.getBudget(),$scope.monthlyTotal=expensesModel.getMonthlyTotal(),$scope.spentBudgetPercentage=function(){return $scope.userBudget>0?Math.round($scope.monthlyTotal/$scope.userBudget*100):!1}(),$scope.isOverBudget=function(){return $scope.spentBudgetPercentage>100?!0:!1}(),-1!==$location.$$path.indexOf("/feed/detail/"))$scope.expense=expensesModel.getExpenseById($routeParams.id),$scope.category=categoriesModel.getCategoryById($scope.expense.category_id),$scope.categoryColor=categoriesModel.getCategoryColorById($scope.category.color_id);else{$scope.expenses=expensesModel.getExpensesChronologically(),$scope.expenses_categories=[];for(var i=0;i<$scope.expenses.length;i++)$scope.expenses_categories.push({expense:$scope.expenses[i],category:categoriesModel.getCategoryById($scope.expenses[i].category_id)})}$scope.openDetailView=function(expenseId){$location.path("/feed/detail/"+expenseId)}}),expenseTrackerAppModule.controller("expenseTracker.goalsController",function($scope,$location,goalsModel,userModel,currenciesModel,expensesModel,navigationService){"use strict";$scope.currentUser=userModel.getCurrentUser(),$scope.userCurrency=currenciesModel.getCurrencyById($scope.currentUser.currency),$scope.goBack=navigationService.goBack,"/settings/goals/add"===$location.$$path?($scope.currentGoal=goalsModel.initNewGoal(),$scope.newGoal={},$scope.newGoal.target="",$scope.newGoal.description=""):userModel.isBudgetSet()?($scope.hasBudget=!0,$scope.goals=goalsModel.getAllGoals(),$scope.spendingStats=expensesModel.calculateAverageSpendingPerDay(),$scope.hasPositiveSpendingDelta=function(){return $scope.spendingStats.spendingDelta>0?"savings-positive":"savings-negative"}):$scope.hasBudget=!1,$scope.saveGoal=function(){goalsModel.saveCurrentGoalToCollection($scope.newGoal.target,$scope.newGoal.description),$scope.goBack()},$scope.getGoalColorBasedOnDays=function(days){var className="goal-border";return 10>=days?className+" soon":days>10&&42>=days?className+" near":days>42?className+" far":void 0},$scope.removeGoal=function(){var anchorHref,currentModal,goalId,clickedAnchor=document.getElementsByClassName("triggered-active-modal");clickedAnchor=clickedAnchor[0],goalId=clickedAnchor.dataset.goalid,goalsModel.removeGoalFromCollection(goalId),anchorHref=clickedAnchor.getAttribute("href"),currentModal=document.querySelector(anchorHref),currentModal.classList.toggle("active")}}),expenseTrackerAppModule.controller("expenseTracker.overviewController",function($scope,$rootScope,userModel,expensesModel,categoriesModel,currenciesModel){"use strict";$scope.budgetChartVisible=!1,$scope.catChartVisible=!0,$scope.timeChartVisible=!1,$scope.categoriesList=function(){var categoryList=categoriesModel.listCategories(),amountPerCategory=expensesModel.getExpensesByCategory();for(var key in categoryList)categoryList[key].amount=amountPerCategory[key].value;return categoryList}(),$scope.categoryColors=categoriesModel.getAvailableColors(),$scope.getBudgetChart=function(){var canvas=document.getElementById("byBudgetChart"),context=canvas.getContext("2d");context.canvas.width=300,context.canvas.height=200,context.clearRect(0,0,canvas.width,canvas.height),$scope.chartBudget=new Chart(context).Line(getBudgetData(),{pointDot:!1,bezierCurve:!1,scaleShowGridLines:!1}),$scope.budgetChartVisible=!0,$scope.catChartVisible=!1,$scope.timeChartVisible=!1},$scope.getWeekChart=function(){var canvas=document.getElementById("byTimeChart"),context=canvas.getContext("2d");context.canvas.width=300,context.canvas.height=200,context.clearRect(0,0,canvas.width,canvas.height),$scope.chartTime=new Chart(context).Line(getTimeData(),{}),$scope.budgetChartVisible=!1,$scope.catChartVisible=!1,$scope.timeChartVisible=!0},$scope.getCatChart=function(){var canvas=document.getElementById("byCategoryChart"),context=canvas.getContext("2d");context.canvas.width=300,context.canvas.height=200,context.clearRect(0,0,canvas.width,canvas.height),$scope.chartCategory=new Chart(context).Doughnut(getCategoryData()),$scope.budgetChartVisible=!1,$scope.catChartVisible=!0,$scope.timeChartVisible=!1},$scope.weeklyTotals=expensesModel.getWeeklyTotals();var currentMonth=(new Date).getMonth();$scope.monthlyTotal=expensesModel.getMonthlyTotal(currentMonth),$scope.budget=userModel.getBudget();var getCategoryData=function(){return expensesModel.getExpensesByCategory()},getTimeData=function(){return expensesModel.getExpensesByTime()},getBudgetData=function(){return expensesModel.getExpensesByBudget()},ctxCategory=$("#byCategoryChart").get(0).getContext("2d");ctxCategory.width=300,ctxCategory.height=200;new Chart(ctxCategory);$scope.chartCategory=new Chart(ctxCategory).Doughnut(getCategoryData(),{});var ctxTime=$("#byTimeChart").get(0).getContext("2d");ctxTime.width=300,ctxTime.height=200;new Chart(ctxTime);$scope.chartTime=new Chart(ctxTime).Line(getTimeData(),{});var ctxBudget=$("#byBudgetChart").get(0).getContext("2d");ctxBudget.width=300,ctxBudget.height=200;new Chart(ctxBudget);$scope.chartBudget=new Chart(ctxBudget).Line(getBudgetData(),{pointDot:!1,bezierCurve:!1,scaleShowGridLines:!1}),$scope.userCurrency=currenciesModel.getCurrencyById(userModel.getCurrency())}),expenseTrackerAppModule.controller("expenseTracker.settingsController",function($scope,$location,categoriesModel,userModel,goalsModel,currenciesModel,navigationService){"use strict";$scope.currentUser=userModel.getCurrentUser(),$scope.currencies=currenciesModel.getCurrenciesList(),$scope.userCurrency=currenciesModel.getCurrencyById($scope.currentUser.currency),$scope.goBack=navigationService.goBack,$scope.setCurrency=function(currencyId){$scope.userCurrency=currencyId,userModel.setCurrency(currencyId)},$scope.checkCurrency=function(currencyId){return userModel.getCurrency()===currencyId?"active":""},$scope.redirectToSettingsPage=function(){$location.path("/settings")}});